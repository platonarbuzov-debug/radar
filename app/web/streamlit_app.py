import os, sys, time
import streamlit as st

ROOT=os.path.abspath(os.path.join(os.path.dirname(__file__), "../.."))
if ROOT not in sys.path: sys.path.insert(0, ROOT)

from dotenv import load_dotenv, find_dotenv
load_dotenv(find_dotenv())

from app.core.pipeline import build_events

st.set_page_config(page_title="RADAR ‚Äî –≥–æ—Ä—è—á–∏–µ —Å–æ–±—ã—Ç–∏—è", layout="wide")
st.title("RADAR ‚Äî –≥–æ—Ä—è—á–∏–µ —Å–æ–±—ã—Ç–∏—è")

hours = st.sidebar.number_input("–û–∫–Ω–æ, —á–∞—Å–æ–≤", 1, 72, 24)
k = st.sidebar.number_input("Top-K", 1, 20, 7)

if st.button("–û–±–Ω–æ–≤–∏—Ç—å"):
    st.session_state["events"]=build_events(hours,k)

evs=st.session_state.get("events", [])
if not evs:
    st.info("–ù–∞–∂–º–∏—Ç–µ ¬´–û–±–Ω–æ–≤–∏—Ç—å¬ª.")
else:
    for ev in evs:
        with st.container(border=True):
            st.subheader(f"üî• {ev['headline']} ‚Äî hotness {ev['hotness']} (–≤–∞–ª–∏–¥–Ω. {ev['validity']:.2f})")
            c1,c2=st.columns([2,1])
            with c1:
                st.markdown(f"**–ü–æ—á–µ–º—É —Å–µ–π—á–∞—Å:** {ev['why_now']}")
                st.markdown("**–°—Å—ã–ª–∫–∏:**")
                for s in ev["sources"]:
                    st.markdown(f"- [{s['source']}]({s['url']})")
                st.markdown("**–ß–µ—Ä–Ω–æ–≤–∏–∫ (–¥–ª—è –∫–∞–Ω–∞–ª–∞):**")
                t0=time.strftime('%d.%m %H:%M', time.localtime(ev['timeline'][0]['t']))
                st.code(f"[{ev['secids'][0] if ev['secids'] else '‚Äî'}] {ev['headline']} | "
                        f"Œî {ev['impact']['pct_move'] if ev['impact']['pct_move'] is not None else 'n/a'}%, "
                        f"vol {ev['impact']['volume_ratio'] if ev['impact']['volume_ratio'] is not None else 'n/a'}x, "
                        f"œÉ {ev['impact']['price_anomaly'] if ev['impact']['price_anomaly'] is not None else 'n/a'} | "
                        f"hotness {ev['hotness']} | –≤–∞–ª–∏–¥–Ω. {ev['validity']:.2f} | —Å {t0}")
            with c2:
                t0=time.strftime('%d.%m %H:%M', time.localtime(ev['timeline'][0]['t']))
                t1=time.strftime('%d.%m %H:%M', time.localtime(ev['timeline'][-1]['t']))
                st.markdown(f"**–¢–∞–π–º–ª–∞–π–Ω:** {t0} ‚Üí {t1}")
                st.markdown(f"**–¢–∏–∫–µ—Ä—ã:** {', '.join(ev['secids'] or ['‚Äî'])}")
                imp=ev["impact"]
                st.metric("Œî%", f"{(imp['pct_move'] or 0):+.2f}%")
                st.metric("–û–±—ä—ë–º", f"{(imp['volume_ratio'] or 0):.2f}x")
                st.metric("–ê–Ω–æ–º–∞–ª–∏—è", f"{(imp['price_anomaly'] or 0):.1f}œÉ")
